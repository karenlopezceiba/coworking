# Información del proyecto
    sonar.projectKey=co.com.ceiba:coworking
    sonar.projectName=coworking

    #Datos de los fuentes y binarios
    sonar.sources=src/main/java
    sonar.java.binaries=build/classes/java/main
    sonar.java.source=1.8

    #Datos de los fuentes y binarios de los tests
    sonar.tests=src/test/java
    sonar.java.test.binaries=build/classes/java/test

    #Envío de reportes de JUnit y Jacoco como resultado de la tarea test
    sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
    sonar.junit.reportPaths=build/test-results/test

stage('Static Code Analysis') {
  steps{
  echo '------------>Análisis de código estático<------------'
  withSonarQubeEnv('Sonar') {
  sh "${tool name: 'SonarScanner', type:'hudson.plugins.sonar.SonarRunnerInstallation'}/bin/sonar-scanner"
    }
  }
}
stage('Build') {
  steps{
  echo "------------>Build<------------"
  //Construir sin tarea test que se ejecutó previamente
  sh 'gradle --b ./microservicio/build.gradle build -x test'
  }
}

post {
  failure {
  echo 'This will run only if failed'
  mail (to: 'karen.lopez@ceiba.com.co',subject: "Failed Pipeline:${currentBuild.fullDisplayName}",body: "Something is wrong with ${env.BUILD_URL}")
  }
}

success {
	echo 'This will run only if successful'
        #junit 'build/test-results/test/*.xml' 
}

